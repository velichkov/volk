language: cpp

os: linux
dist: trusty
sudo: false

addons:
  apt:
    packages: &common_packages
      - python-mako
      - liborc-dev
      - libboost-system-dev
      - libboost-filesystem-dev

env:
  global:
    - SDE_VERSION=sde-external-8.35.0-2019-03-11-lin
    - SDE_URL1=https://software.intel.com/protected-download/267266/144917
    - SDE_URL2=https://software.intel.com/system/files/managed/32/db

matrix:
  include:
      #    # Job 1 ... gcc-4.8 (default GCC version)
      #    - env: MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8"
      #      addons: {apt: {packages: [*common_packages]}}
      #    # Job 2 ... gcc-4.9
      #    - env: MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9 CMAKE_ARG=-DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/intel-sde.cmake"
      #      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-4.9]}}
      #      cache:
      #        directories:
      #          - ${TRAVIS_BUILD_DIR}/cache
      #      before_script:
      #        - cd ${TRAVIS_BUILD_DIR} && ./scripts/ci/download_intel_sde.sh
      #    # Job 3 ... gcc-5
      #    - env: MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      #      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-5]}}
      #    # Job 4 ... gcc-6
      #    - env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      #      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-6]}}
      #    # Job 5 ... gcc-7
      #    - env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      #      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-7]}}
      #    # Job 6 ... ARMv7 cross compile (gcc-4.8)
      #    - env: MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8 && BOOST_ROOT=$TRAVIS_BUILD_DIR/cache/boost_1_66_0 && CMAKE_ARG=-DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/arm-linux-gnueabihf.cmake"
      #      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-arm-linux-gnueabihf, qemu-user]}}
      #      cache:
      #        directories:
      #          - ${TRAVIS_BUILD_DIR}/cache
      #      before_script:
      #        - cd ${TRAVIS_BUILD_DIR} && ./scripts/ci/cross_build_boost.sh "arm" "linux-gnueabihf-g++"
      #    # Job 6 ... ARMv8 (aarch64) cross compile (gcc-4.8)
      #    - env: MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8 && BOOST_ROOT=$TRAVIS_BUILD_DIR/cache/boost_1_66_0 && CMAKE_ARG=-DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/aarch64-linux-gnu.cmake"
      #      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-aarch64-linux-gnu, qemu-user]}}
      #      cache:
      #        directories:
      #          - ${TRAVIS_BUILD_DIR}/cache
      #      before_script:
      #        - cd ${TRAVIS_BUILD_DIR} && ./scripts/ci/cross_build_boost.sh "aarch64" "linux-gnu-g++"
      #    # Job 7 .. clang
      #    - env: MATRIX_EVAL="CC=\"clang -fprofile-instr-generate -fcoverage-mapping\" && CXX=\"clang++ -fprofile-instr-generate -fcoverage-mapping\""
      #      addons: {apt: {packages: [*common_packages]}}
      #    # Job 8 .. gcc-7 py3
      #    - env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && CMAKE_ARG=-DPYTHON_EXECUTABLE=/usr/bin/python3"
      #      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-7, python3, python3-mako, python3-six]}}
      #    - name: Linux arm64 GCC
      #      arch: arm64
      #      dist: bionic
      #      env: MATRIX_EVAL="CMAKE_ARG=-DPYTHON_EXECUTABLE=/usr/bin/python3"
      #      addons: {apt: {packages: [*common_packages, python3, python3-distutils, python3-mako, python3-six]}}
      #    - name: Linux arm64 Clang
      #      dist: bionic
      #      arch: arm64
      #      env: MATRIX_EVAL="CC=clang && CXX=clang++ && CMAKE_ARG=-DPYTHON_EXECUTABLE=/usr/bin/python3"
      #      addons: {apt: {packages: [*common_packages, python3, python3-distutils, python3-mako, python3-six]}}
    - name: Linux ppc64le GCC
      dist: bionic
      arch: ppc64le
      env:
          - CFLAGS="-mcpu=power9 -maltivec -mabi=altivec" CXXFLAGS="-mcpu=power9 -maltivec -mabi=altivec"
          - CMAKE_ARG="-DPYTHON_EXECUTABLE=/usr/bin/python3 -DCMAKE_BUILD_TYPE=Debug"
      addons: {apt: {packages: [*common_packages, python3, python3-distutils, python3-mako, python3-six]}}
    - name: Linux ppc64le Clang
      dist: bionic
      arch: ppc64le
      env:
          - CC=clang CXX=clang++
          - CFLAGS="-mcpu=power9 -maltivec -mabi=altivec" CXXFLAGS="-mcpu=power9 -maltivec -mabi=altivec"
          - CMAKE_ARG="-DPYTHON_EXECUTABLE=/usr/bin/python3 -DCMAKE_BUILD_TYPE=ASAN"
      addons: {apt: {packages: [*common_packages, python3, python3-distutils, python3-mako, python3-six]}}
    - name: Linux s390x GCC
      dist: bionic
      arch: s390x
      env:
          - CFLAGS="-march=z13 -mvx -mzvector" CXXFLAGS="-march=z13 -mvx -mzvector"
          - CMAKE_ARG="-DPYTHON_EXECUTABLE=/usr/bin/python3 -DCMAKE_BUILD_TYPE=ASAN"
      addons: {apt: {packages: [*common_packages, python3, python3-distutils, python3-mako, python3-six]}}
    - name: Linux s390x Clang
      dist: bionic
      arch: s390x
      env:
          - CC=clang CXX=clang++
          - CFLAGS="-march=z13 -mvx -mzvector" CXXFLAGS="-march=z13 -mvx -mzvector"
          - CMAKE_ARG="-DPYTHON_EXECUTABLE=/usr/bin/python3 -DCMAKE_BUILD_TYPE=ASAN"
      addons: {apt: {packages: [*common_packages, python3, python3-distutils, python3-mako, python3-six]}}
  allow_failures:
    - arch: s390x
    - arch: ppc64le

#      before_install:
#        - pip install --user codecov
#      after_success:
#        - bash <(curl -s https://codecov.io/bash)

script:
    #- eval "${MATRIX_EVAL}"
  - export
  - lscpu
  - export ASAN_OPTIONS=fast_unwind_on_malloc=0:report_objects=1
  - mkdir build && cd build && BOOST_ROOT=$BOOST_ROOT cmake ${CMAKE_ARG} ../ && make && ctest -V && cd ..
